- name: Start background load for each sutest node
  script: "{{ start_background_load }}"
  
- name: Wait for background load history to build up
  pause:
    minutes: 1

- name: Generate load timeline
  shell:
    python3 {{ load_timeline_generator }} {{ load_aware_scale_test_distribution }} {{ load_aware_scale_test_duration}} {{ load_aware_scale_test_instances }} "{{ artifact_extra_logs_dir }}/schedule_plan.yaml"

- name: Run workload and dump stats
  block:
  - name: Run test workload with scheduler and load timeline
    shell:
      python3 {{ pod_start_scheduler }} {{ load_aware_scale_test_scheduler }} {{ load_aware_scale_test_namespace }} "{{ artifact_extra_logs_dir }}/schedule_plan.yaml" "{{ artifact_extra_logs_dir }}/schedule_execution.yaml" {{ load_aware_scale_test_sleep_duration }}

  - name: Wait for workloads to finish
    shell:
      oc get pods -n {{ load_aware_scale_test_namespace }} --no-headers | awk '{ print $3 }'
    register: load_aware_workload
    delay: 60
    retries: 240
    until:
      "'Running' not in load_aware_workload.stdout
        and 'Pending' not in load_aware_workload.stdout
        and 'Failed' not in load_aware_workload.stdout
        and 'ContainerCreating' not in load_aware_workload.stdout
        and 'ImagePullBackOff' not in load_aware_workload.stdout"

  always:
  - name: Dump info about scale test resources
    shell: |
      oc get pods -n {{ load_aware_scale_test_namespace }} > "{{ artifact_extra_logs_dir }}/scale_test_pods.status" 
      oc get pods -n {{ load_aware_scale_test_namespace }} -ojson > "{{ artifact_extra_logs_dir }}/scale_test_pods.json"
    ignore_errors: true

  - name: Dump trimaran scheduler log
    shell: |
      oc logs -n trimaran $(oc get pod -n trimaran -l "app=trimaran-scheduler" --no-headers | awk '{print $1}') > "{{ artifact_extra_logs_dir }}/trimaran_scheduler.log"
    ignore_errors: true
